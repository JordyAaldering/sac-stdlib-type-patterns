class Indent;

classtype int;

use StdIO: all;
use Structures: all;

export all;

objdef Indent indent = to_Indent( 0);

Indent newIndent( int val)
{
  i = to_Indent( val);
  return( i);
}

int getIndent( Indent &i)
{
  val = from_Indent( i);
  i = to_Indent( val);
  return( val);
}

int getIndent()
{
  val = getIndent( indent);
  return( val);
}

void setIndent( Indent &i, int val)
{
  i = to_Indent( val);
}

void doIndent( Indent &i, string pattern)
{
  shp = [strlen( pattern) * getIndent( i)];
  val = genarray( [getIndent( i)], tochar( pattern));
  indents = reshape( shp, val);
  printf( to_string( indents));
}

void doIndent( string pattern)
{
  doIndent( indent, pattern);
}

void incIndent( Indent &i)
{
  val = from_Indent( i);
  i = to_Indent( val + 1);
}

void incIndent( Indent &i, int offset)
{
  val = from_Indent( i);
  i = to_Indent( val + offset);
}

void incIndent()
{
  incIndent( indent);
}

void decIndent( Indent &i)
{
  val = from_Indent( i);
  i = to_Indent( val - 1);
}

void decIndent( Indent &i, int offset)
{
  val = from_Indent( i);
  i = to_Indent( val - offset);
}

void decIndent()
{
  decIndent( indent);
}
