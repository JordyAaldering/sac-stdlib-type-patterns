module Bits;

export all;

/******************************************************************************
 *
 * These functions implements some bitwise operations on integers.
 *
 ******************************************************************************/

external int BitShiftRight( int k, int val);
  #pragma linkname "SAC_Bits_BitShiftRight"
  #pragma linksign[ 0,1,2]
  #pragma linkobj "src/Bits/BitShiftRight.o"

external int BitShiftLeft( int k, int val);
  #pragma linkname "SAC_Bits_BitShiftLeft"
  #pragma linksign[ 0,1,2]
  #pragma linkobj "src/Bits/BitShiftLeft.o"

external int BitRotateRight( int k, int val);
  #pragma linkname "SAC_Bits_BitRotateRight"
  #pragma linksign[ 0,1,2]
  #pragma linkobj "src/Bits/BitRotateRight.o"

external int BitRotateLeft( int k, int val);
  #pragma linkname "SAC_Bits_BitRotateLeft"
  #pragma linksign[ 0,1,2]
  #pragma linkobj "src/Bits/BitRotateLeft.o"

external int BitAND( int mask, int val);
  #pragma linkname "SAC_Bits_BitAND"
  #pragma linksign[ 0,1,2]
  #pragma linkobj "src/Bits/BitAND.o"

external int BitOR( int mask, int val);
  #pragma linkname "SAC_Bits_BitOR"
  #pragma linksign[ 0,1,2]
  #pragma linkobj "src/Bits/BitOR.o"

external int BitXOR( int mask, int val);
  #pragma linkname "SAC_Bits_BitXOR"
  #pragma linksign[ 0,1,2]
  #pragma linkobj "src/Bits/BitXOR.o"

external int BitOnesComplement( int val);
  #pragma linkname "SAC_Bits_BitOnesComplement"
  #pragma linksign[ 0,1]
  #pragma linkobj "src/Bits/BitOnesComplement.o"

external int BitTwosComplement( int val);
  #pragma linkname "SAC_Bits_BitTwosComplement"
  #pragma linksign[ 0,1]
  #pragma linkobj "src/Bits/BitTwosComplement.o"
