module ArrayIO;

use ArrayFormat: all;
use IOresources: all;
use Structures: all;
use TermFile: {TermFile};

export {print,fprint,show};

#include "Templates.mac"

//------------------------------------------------------------------------------

#define HASH #
#define PRINTME( x) x
#define QUOTEME( x) #x

#ifdef SAC_BACKEND_DISTMEM

#define LINKSPEC_FxA( actualtype, typename)                                    \
external void printarray( File &stream, int d, int[.] s,                       \
                          actualtype[*] a, bool is_distr, ulong arr_offset,    \
                          ulong elems_first_nodes);                            \
  PRINTME(HASH)pragma linkname QUOTEME(ARRAYIO__Print##typename##Array)        \
  PRINTME(HASH)pragma linkobj QUOTEME(src/ArrayIO/PrintArray.o)

#define LINKSPEC_TxA( actualtype, typename)                                    \
external void printarray( TermFile &stream, int d, int[.] s,                   \
                          actualtype[*] a, bool is_distr, ulong arr_offset,    \
                          ulong elems_first_nodes);                            \
  PRINTME(HASH)pragma linkname QUOTEME(ARRAYIO__Print##typename##Array)        \
  PRINTME(HASH)pragma linkobj QUOTEME(src/ArrayIO/PrintArray.o)

#define LINKSPEC_FMT_FxA( actualtype, typename)                                \
external void printarray( File &stream, string fmt, int d, int[.] s,           \
                          actualtype[*] a, bool is_distr, ulong arr_offset,    \
                          ulong elems_first_nodes);                            \
  PRINTME(HASH)pragma linkname QUOTEME(ARRAYIO__Print##typename##ArrayFormat)  \
  PRINTME(HASH)pragma linkobj QUOTEME(src/ArrayIO/PrintArray.o)

#define LINKSPEC_FMT_TxA( actualtype, typename)                                \
external void printarray( TermFile &stream, string fmt, int d, int[.] s,       \
                          actualtype[*] a, bool is_distr, ulong arr_offset,    \
                          ulong elems_first_nodes);                            \
  PRINTME(HASH)pragma linkname QUOTEME(ARRAYIO__Print##typename##ArrayFormat)  \
  PRINTME(HASH)pragma linkobj QUOTEME(src/ArrayIO/PrintArray.o)

#else /* SAC_BACKEND_DISTMEM */

#define LINKSPEC_FxA( actualtype, typename)                                    \
external void printarray( File &stream, int d, int[.] s, actualtype[*] a);     \
  PRINTME(HASH)pragma linkname QUOTEME(ARRAYIO__Print##typename##Array)        \
  PRINTME(HASH)pragma linkobj "src/ArrayIO/PrintArray.o"

#define LINKSPEC_TxA( actualtype, typename)                                    \
external void printarray( TermFile &stream, int d, int[.] s, actualtype[*] a); \
  PRINTME(HASH)pragma linkname QUOTEME(ARRAYIO__Print##typename##Array)        \
  PRINTME(HASH)pragma linkobj "src/ArrayIO/PrintArray.o"

#define LINKSPEC_FMT_FxA( actualtype, typename)                                \
external void printarray( File &stream, string fmt, int d, int[.] s,           \
                          actualtype[*] a);                                    \
  PRINTME(HASH)pragma linkname QUOTEME(ARRAYIO__Print##typename##ArrayFormat)  \
  PRINTME(HASH)pragma linkobj "src/ArrayIO/PrintArray.o"

#define LINKSPEC_FMT_TxA( actualtype, typename)                                \
external void printarray( TermFile &stream, string fmt, int d, int[.] s,       \
                          actualtype[*] a);                                    \
  PRINTME(HASH)pragma linkname QUOTEME(ARRAYIO__Print##typename##ArrayFormat)  \
  PRINTME(HASH)pragma linkobj "src/ArrayIO/PrintArray.o"

#endif /* SAC_BACKEND_DISTMEM */

#define LINKSPEC( actualtype, typename)                                        \
LINKSPEC_FxA( actualtype, typename)                                            \
LINKSPEC_TxA( actualtype, typename)                                            \
LINKSPEC_FMT_FxA( actualtype, typename)                                        \
LINKSPEC_FMT_TxA( actualtype, typename)

LINKSPEC( bool, Bool)
LINKSPEC( byte, Byte)
LINKSPEC( short, Short)
LINKSPEC( int, Int)
LINKSPEC( long, Long)
LINKSPEC( longlong, Longlong)
LINKSPEC( ubyte, Ubyte)
LINKSPEC( ushort, Ushort)
LINKSPEC( uint, Uint)
LINKSPEC( ulong, Ulong)
LINKSPEC( ulonglong, Ulonglong)
LINKSPEC( float, Float)
LINKSPEC( double, Double)
LINKSPEC( char, Char)

//------------------------------------------------------------------------------

#ifdef SAC_BACKEND_DISTMEM

#define PRINT_A( typ, postfix, zero, one)                                      \
inline                                                                         \
void print( typ[d:shp] arr)                                                    \
{                                                                              \
  printarray( stdout, d, shp, arr,                                             \
              _isDist_A_( arr), _offs_A_( arr), _firstElems_A_( arr));         \
}

#define PRINT_FxA( typ, postfix, zero, one)                                    \
inline                                                                         \
void fprint( File &stream, typ[d:shp] arr)                                     \
{                                                                              \
  printarray( stream, d, shp, arr,                                             \
              _isDist_A_( arr), _offs_A_( arr), _firstElems_A_( arr));         \
}

#define PRINT_TxA( typ, postfix, zero, one)                                    \
inline                                                                         \
void fprint( TermFile &stream, typ[d:shp] arr)                                 \
{                                                                              \
  printarray( stream, d, shp, arr,                                             \
              _isDist_A_( arr), _offs_A_( arr), _firstElems_A_( arr));         \
}

#define PRINT_FMT_A( typ, postfix, zero, one)                                  \
inline                                                                         \
void print( string fmt, typ[d:shp] arr)                                        \
{                                                                              \
  printarray( stdout, fmt, d, shp, arr,                                        \
              _isDist_A_( arr), _offs_A_( arr), _firstElems_A_( arr));         \
}

#define PRINT_FMT_FxA( typ, postfix, zero, one)                                \
inline                                                                         \
void fprint( File &stream, string fmt, typ[d:shp] arr)                         \
{                                                                              \
  printarray( stream, fmt, d, shp, arr,                                        \
              _isDist_A_( arr), _offs_A_( arr), _firstElems_A_( arr));         \
}

#define PRINT_FMT_TxA( typ, postfix, zero, one)                                \
inline                                                                         \
void fprint( TermFile &stream, string fmt, typ[d:shp] arr)                     \
{                                                                              \
  printarray( stream, fmt, d, shp, arr,                                        \
              _isDist_A_( arr), _offs_A_( arr), _firstElems_A_( arr));         \
}

#else /* SAC_BACKEND_DISTMEM */

#define PRINT_A( typ, postfix, zero, one)                                      \
inline                                                                         \
void print( typ[d:shp] arr)                                                    \
{                                                                              \
  printarray( stdout, d, shp, arr);                                            \
}

#define PRINT_FxA( typ, postfix, zero, one)                                    \
inline                                                                         \
void fprint( File &stream, typ[d:shp] arr)                                     \
{                                                                              \
  printarray( stream, d, shp, arr);                                            \
}

#define PRINT_TxA( typ, postfix, zero, one)                                    \
inline                                                                         \
void fprint( TermFile &stream, typ[d:shp] arr)                                 \
{                                                                              \
  printarray( stream, d, shp, arr);                                            \
}

#define PRINT_FMT_A( typ, postfix, zero, one)                                  \
inline                                                                         \
void print( string fmt, typ[d:shp] arr)                                        \
{                                                                              \
  printarray( stdout, fmt, d, shp, arr);                                       \
}

#define PRINT_FMT_FxA( typ, postfix, zero, one)                                \
inline                                                                         \
void fprint( File &stream, string fmt, typ[d:shp] arr)                         \
{                                                                              \
  printarray( stream, fmt, d, shp, arr);                                       \
}

#define PRINT_FMT_TxA( typ, postfix, zero, one)                                \
inline                                                                         \
void fprint( TermFile &stream, string fmt, typ[d:shp] arr)                     \
{                                                                              \
  printarray( stream, fmt, d, shp, arr);                                       \
}

#endif /* SAC_BACKEND_DISTMEM */

#define PRINT( typ, postfix, zval, oval)                                       \
PRINT_A( typ, postfix, zval, oval)                                             \
PRINT_FxA( typ, postfix, zval, oval)                                           \
PRINT_TxA( typ, postfix, zval, oval)                                           \
PRINT_FMT_A( typ, postfix, zval, oval)                                         \
PRINT_FMT_FxA( typ, postfix, zval, oval)                                       \
PRINT_FMT_TxA( typ, postfix, zval, oval)

BUILT_IN( PRINT)

//------------------------------------------------------------------------------

external void showarray( File &stream, int d, int[.] s, char[*] a);
  #pragma linkname "ARRAYIO__ShowCharArray"
  #pragma linkobj "src/ArrayIO/ShowArray.o"

external void showarray( TermFile &stream, int d, int[.] s, char[*] a);
  #pragma linkname "ARRAYIO__ShowCharArray"
  #pragma linkobj "src/ArrayIO/ShowArray.o"

#define SHOW( actualtype)                                                      \
inline                                                                         \
void show( actualtype[d:shp] a)                                                \
{                                                                              \
  showarray( stdout, d, shp, format( a));                                      \
}

SHOW( int)
SHOW( float)
SHOW( double)
SHOW( bool)
SHOW( char)
